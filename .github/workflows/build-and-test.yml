name: Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    name: Build Plugin for UE5.5
    runs-on: windows-latest
    permissions:
      contents: read
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.1
      
    - name: Cache Unreal Engine
      id: cache-ue
      uses: actions/cache@v3
      with:
        path: C:\UnrealEngine
        key: ${{ runner.os }}-ue5.5-${{ hashFiles('**/ChatGPTEditor.uplugin') }}
        restore-keys: |
          ${{ runner.os }}-ue5.5-
    
    # Note: In a real setup, you would need to install UE5.5 here
    # This is a placeholder showing the workflow structure
    - name: Install Unreal Engine 5.5
      if: steps.cache-ue.outputs.cache-hit != 'true'
      run: |
        # Download and install UE5.5
        # This requires Epic Games account and is typically done via Epic Games Launcher
        echo "UE5.5 installation placeholder - requires Epic Games account setup"
        
    - name: Build Plugin
      run: |
        # Build the plugin using Unreal Build Tool
        # Example command (adjust paths as needed):
        # "C:\UnrealEngine\Engine\Build\BatchFiles\RunUAT.bat" BuildPlugin -Plugin="${{ github.workspace }}\ChatGPTEditor.uplugin" -Package="${{ github.workspace }}\Package"
        echo "Build command placeholder"
      
    - name: Run Plugin Tests
      run: |
        # Run automation tests
        # Example command (adjust paths as needed):
        # "C:\UnrealEngine\Engine\Binaries\Win64\UnrealEditor-Cmd.exe" -ExecCmds="Automation RunTests ChatGPTEditor" -unattended -nopause -nosplash -nullrhi
        echo "Test command placeholder"
        
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: ChatGPTEditor-Build
        path: Package/
        retention-days: 7

  lint:
    name: Code Quality Check
    runs-on: ubuntu-latest
    permissions:
      contents: read
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Check for TODOs
      run: |
        echo "Checking for TODOs in code..."
        grep -r "TODO\|FIXME\|HACK\|XXX" Source/ || true
        
    - name: Check file permissions
      run: |
        echo "Checking file permissions..."
        find Source/ -type f -name "*.cpp" -o -name "*.h" | xargs ls -l
        
    - name: Verify plugin manifest
      run: |
        echo "Verifying plugin manifest..."
        cat ChatGPTEditor.uplugin
        # Could add JSON validation here
